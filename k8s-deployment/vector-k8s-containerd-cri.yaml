############################################
# Vector K8S DaemonSet - Containerd CRI 版本
# 用于收集 Java 微服务多行日志
# 发送到 VictoriaLogs (使用 Loki API)
############################################
apiVersion: v1
kind: Namespace
metadata:
  name: logging
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-config
  namespace: logging
data:
  vector.yaml: |
    ############################################################
    # Vector 配置 - K8S Containerd CRI
    ############################################################
    api:
      enabled: true
      address: 0.0.0.0:8686

    ############################################################
    # Sources: 日志源配置
    ############################################################
    sources:
      # Kubernetes 日志收集（Containerd CRI）
      kubernetes_logs:
        type: kubernetes_logs
        auto_partial_merge: true
        glob_minimum_cooldown_ms: 1000
        # 只收集 Java 应用日志
        extra_label_selector: "app.kubernetes.io/component=java"
        # 多行日志配置（Java 应用）
        multiline:
          start_pattern: '^\d{4}-\d{2}-\d{2}[ T]\d{2}:\d{2}:\d{2}(?:[.,]\d{3})?'
          condition_pattern: '^\d{4}-\d{2}-\d{2}[ T]\d{2}:\d{2}:\d{2}(?:[.,]\d{3})?'
          mode: halt_before
          timeout_ms: 4000

    ############################################################
    # Transforms: 日志处理
    ############################################################
    transforms:
      # 处理 Containerd 时间戳前缀
      process_containerd_logs:
        type: remap
        inputs: [kubernetes_logs]
        source: |
          # Containerd 格式: 2025-01-15T10:30:45.123456789Z stdout F <actual log>
          # 提取实际的日志内容
          if starts_with(.message, "stdout") || starts_with(.message, "stderr") {
            parts = split(.message, " ", limit: 3)
            if length(parts) >= 3 {
              .message = parts[2]
            }
          }
          
          # 保留消息到 _msg 字段
          ._msg = to_string!(.message)
          del(.message)
          
          # 提取 K8S 元数据
          .namespace = .kubernetes.pod_namespace
          .pod_name = .kubernetes.pod_name
          .container_name = .kubernetes.container_name
          .node_name = "${VECTOR_SELF_NODE_NAME}"
          
          # 添加服务标签
          .service = .kubernetes.pod_labels."app.kubernetes.io/name" ?? .kubernetes.pod_labels.app ?? "unknown"
          .log_type = "application"
          
          # 清理不需要的字段
          del(.kubernetes)
          del(.file)
          del(.source_type)
          del(.stream)

    ############################################################
    # Sinks: 输出配置
    ############################################################
    sinks:
      # 发送到 VictoriaLogs (使用 Loki API)
      victorialogs:
        type: loki
        inputs: [process_containerd_logs]
        endpoint: "${VLS_ENDPOINT:-http://victorialogs:9428}"
        path: /insert/loki/api/v1/push
        labels:
          job: "{{ service }}"
          namespace: "{{ namespace }}"
          pod: "{{ pod_name }}"
          container: "{{ container_name }}"
          node: "{{ node_name }}"
          log_type: "{{ log_type }}"
        encoding:
          codec: json
        batch:
          max_bytes: 1048576        # 1 MiB
          timeout_secs: 3
        buffer:
          type: memory
          max_events: 50000
          when_full: drop_newest
        request:
          concurrency: 4
          compression: gzip         # K8S 环境建议开启压缩
        healthcheck: false

      # 控制台输出（调试用，生产环境可删除）
      console:
        type: console
        inputs: [process_containerd_logs]
        target: stdout
        encoding:
          codec: text
          field: _msg
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vector
  namespace: logging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vector
rules:
  - apiGroups: [""]
    resources:
      - namespaces
      - nodes
      - pods
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vector
subjects:
  - kind: ServiceAccount
    name: vector
    namespace: logging
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vector
  namespace: logging
  labels:
    app: vector
spec:
  selector:
    matchLabels:
      app: vector
  template:
    metadata:
      labels:
        app: vector
    spec:
      serviceAccountName: vector
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: vector
        image: timberio/vector:0.41.1-alpine
        imagePullPolicy: IfNotPresent
        env:
        - name: VECTOR_SELF_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: VECTOR_SELF_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: VECTOR_SELF_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: VLS_ENDPOINT
          value: "http://victorialogs.logging.svc.cluster.local:9428"
        - name: VECTOR_LOG
          value: "warn"
        - name: TZ
          value: "Asia/Shanghai"
        - name: PROCFS_ROOT
          value: "/host/proc"
        - name: SYSFS_ROOT
          value: "/host/sys"
        ports:
        - name: api
          containerPort: 8686
          protocol: TCP
        resources:
          requests:
            memory: "128Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        volumeMounts:
        - name: config
          mountPath: /etc/vector
          readOnly: true
        - name: data
          mountPath: /var/lib/vector
        - name: var-log
          mountPath: /var/log
          readOnly: true
        - name: run-containerd
          mountPath: /run/containerd/containerd.sock
          readOnly: true
        - name: var-lib-containerd
          mountPath: /var/lib/containerd
          readOnly: true
        - name: proc
          mountPath: /host/proc
          readOnly: true
        - name: sys
          mountPath: /host/sys
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: api
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: api
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: vector-config
          items:
          - key: vector.yaml
            path: vector.yaml
      - name: data
        hostPath:
          path: /var/lib/vector
          type: DirectoryOrCreate
      - name: var-log
        hostPath:
          path: /var/log
      - name: run-containerd
        hostPath:
          path: /run/containerd/containerd.sock
          type: Socket
      - name: var-lib-containerd
        hostPath:
          path: /var/lib/containerd
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
---
apiVersion: v1
kind: Service
metadata:
  name: vector-api
  namespace: logging
  labels:
    app: vector
spec:
  type: ClusterIP
  ports:
  - port: 8686
    targetPort: 8686
    name: api
  selector:
    app: vector
---
# VictoriaLogs Service (如果需要在集群内部署)
apiVersion: v1
kind: Service
metadata:
  name: victorialogs
  namespace: logging
spec:
  type: ExternalName
  externalName: your-victorialogs-host.com  # 替换为实际的 VictoriaLogs 地址
  ports:
  - port: 9428
    targetPort: 9428