############################################
# Vector K8S DaemonSet - Containerd CRI 官方最佳实践版本  
# 基于官方文档：https://github.com/vectordotdev/vector
############################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-config
  namespace: logging
data:
  vector.yaml: |
    # 数据目录
    data_dir: "/var/lib/vector"
    
    # API
    api:
      enabled: true
      address: "0.0.0.0:8686"
    
    # 使用官方推荐的kubernetes_logs源
    sources:
      k8s_logs:
        type: "kubernetes_logs"
        # 官方推荐：自动处理多行日志合并
        auto_partial_merge: true
        # 只收集Java应用，通过标签过滤
        extra_label_selector: "app!=fluentd,app!=vector"
    
    # 日志处理流水线
    transforms:
      # 1. 过滤健康检查日志
      filter_java_logs:
        type: filter
        inputs: [k8s_logs]
        condition: |
          # 只排除明显的健康检查
          !contains(string!(.message), "/actuator/health") &&
          !contains(string!(.message), "/health")

      # 2. Java多行日志增强处理
      enhance_multiline:
        type: reduce
        inputs: [filter_java_logs]
        # 使用你提供的优化模式匹配Java日志
        group_by:
          - kubernetes.pod_name
          - kubernetes.container_name
        # 识别新日志行的开始模式
        starts_when: |
          match(string!(.message), r'^(\d{4}-\d{2}-\d{2}(?:T|\s)\d{2}:\d{2}:\d{2}|\b(INFO|WARN|DEBUG|ERROR|FATAL|TRACE)\b)')
        # 3秒超时，确保异常堆栈及时输出
        expire_after_ms: 3000
        # 合并策略：将多行合并为单条消息
        merge_strategies:
          message: concat_newline

      # 3. 添加VictoriaLogs所需的_msg字段
      add_msg_field:
        type: remap
        inputs: [enhance_multiline]
        source: |
          ._msg = .message
    
    # 输出
    sinks:
      # VictoriaLogs
      victorialogs:
        type: loki
        inputs: [add_msg_field]
        endpoint: "http://172.18.151.163:9428"
        path: /insert/loki/api/v1/push
        labels:
          job: "java-app"
          namespace: "{{ kubernetes.pod_namespace }}"
          pod: "{{ kubernetes.pod_name }}"
          container: "{{ kubernetes.container_name }}"
        encoding:
          codec: json
        # 优化批处理和缓冲配置（基于官方最佳实践）
        batch:
          max_bytes: 1048576      # 1MB批大小，官方推荐
          max_events: 500         # 双重限制，先达到的生效
          timeout_secs: 5         # 5秒批超时
        buffer:
          type: memory
          max_events: 10000       # 10倍缓冲容量，提高容错率
          when_full: drop_newest  # 缓冲满时丢弃最新数据
        # 禁用健康检查避免400错误
        healthcheck: false
        request:
          timeout_secs: 30
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vector
  namespace: logging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vector
rules:
  - apiGroups: [""]
    resources:
      - namespaces
      - nodes  
      - pods
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vector
subjects:
  - kind: ServiceAccount
    name: vector
    namespace: logging
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vector
  namespace: logging
  labels:
    app: vector
spec:
  selector:
    matchLabels:
      app: vector
  template:
    metadata:
      labels:
        app: vector
    spec:
      serviceAccountName: vector
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: vector
        image: registry.cn-shenzhen.aliyuncs.com/starsl/vector:0.41.1-alpine
        env:
        - name: VECTOR_SELF_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: VECTOR_LOG
          value: "warn"
        - name: TZ
          value: "Asia/Shanghai"
        - name: PROCFS_ROOT
          value: "/host/proc"
        - name: SYSFS_ROOT
          value: "/host/sys"
        ports:
        - name: api
          containerPort: 8686
        resources:
          requests:
            memory: "128Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        volumeMounts:
        - name: config
          mountPath: /etc/vector
        - name: data
          mountPath: /var/lib/vector
        - name: var-log
          mountPath: /var/log
          readOnly: true
        - name: run-containerd
          mountPath: /run/containerd/containerd.sock
          readOnly: true
        - name: var-lib-containerd
          mountPath: /var/lib/containerd
          readOnly: true
        - name: proc
          mountPath: /host/proc
          readOnly: true
        - name: sys
          mountPath: /host/sys
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: api
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: config
        configMap:
          name: vector-config
      - name: data
        hostPath:
          path: /var/lib/vector
          type: DirectoryOrCreate
      - name: var-log
        hostPath:
          path: /var/log
      - name: run-containerd
        hostPath:
          path: /run/containerd/containerd.sock
          type: Socket
      - name: var-lib-containerd
        hostPath:
          path: /var/lib/containerd
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys